[{"C:\\Users\\arinr\\Documents\\electron-helloworld\\src\\App.js":"1","C:\\Users\\arinr\\Documents\\electron-helloworld\\src\\reportWebVitals.js":"2"},{"size":5585,"mtime":1612232488952,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1606441477066,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1q38xi9",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\arinr\\Documents\\electron-helloworld\\src\\App.js",["11","12","13","14","15"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { QRCode } from 'react-qrcode-logo';\nimport { TwitterTimelineEmbed } from 'react-twitter-embed';\nimport tezos from \"./tezos.png\"\nimport burst from \"./burst.png\"\nimport cardano from \"./cardano.png\"\nimport './App.css';\n\nfunction App() {\n  const electron = window.require(\"electron\"); \n  const BrowserWindow = electron.remote.BrowserWindow; \n  const path = require(\"path\"); \n  const dialog = electron.remote.dialog; \n  let win = BrowserWindow.getFocusedWindow(); \n  var fs = window.require('fs');\n  const takeScreenshot = () => {\n    win.webContents \n        .capturePage({ \n            x: 0, \n            y: 0, \n            width: 900, \n            height: 680, \n        }) \n        .then((img) => { \n            dialog \n                .showSaveDialog({ \n                    title: \"Select the File Path to save\", \n                \n                    // Default path to assets folder \n                    defaultPath: path.join(__dirname,  \n                                           \"../assets/image.png\"), \n                \n                    // defaultPath: path.join(__dirname,  \n                    // '../assets/image.jpeg'), \n                    buttonLabel: \"Save\", \n                \n                    // Restricting the user to only Image Files. \n                    filters: [ \n                        { \n                            name: \"Image Files\", \n                            extensions: [\"png\", \"jpeg\", \"jpg\"], \n                        }, \n                    ], \n                    properties: [], \n                }) \n                .then((file) => { \n                    // Stating whether dialog operation was  \n                    // cancelled or not. \n                    console.log(file.canceled); \n                    if (!file.canceled) { \n                        console.log(file.filePath.toString()); \n  \n                        // Creating and Writing to the image.png file \n                        // Can save the File as a jpeg file as well, \n                        // by simply using img.toJPEG(100); \n                        fs.writeFile(file.filePath.toString(),  \n                                     img.toPNG(), \"base64\", function (err) { \n                            if (err) throw err; \n                            console.log(\"Saved!\"); \n                        }); \n                    } \n                }) \n                .catch((err) => { \n                    console.log(err); \n                }); \n        }) \n        .catch((err) => { \n            console.log(err); \n        }); \n  }\n  const [prices, setPrices] = useState({\n    tezos: \"0.00\",\n    burst: \"0.00\",\n    cardano: \"0.00\"\n  })\n  const connection = new WebSocket(\"wss://ws.coincap.io/prices?assets=tezos,burst,cardano\")\n  useEffect(() => {\n    connection.onmessage = function (msg) {\n      const message = JSON.parse(msg.data);\n      console.log(message)\n      if(message.tezos) {\n        setPrices(prevState => ({\n          ...prevState,\n          tezos: message.tezos\n        }));\n      } if(message.burst) {\n        setPrices(prevState => ({\n          ...prevState,\n          burst: message.burst\n        }));\n      } if(message.cardano) {\n        setPrices(prevState => ({\n          ...prevState,\n          cardano: message.cardano\n        }));\n      } if(message.tezos && message.burst && message.cardano) {\n        setPrices(prevState => ({\n          ...prevState,\n          tezos: message.tezos,\n          burst: message.burst,\n          cardano: message.cardano,\n        }));\n      }\n    }\n  },[prices])\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"Box\" style={{marginLeft: \"50px\"}}>\n          <p>Arin Ramer</p>\n          <QRCode value=\"Arin Ramer\" size={100} ecLevel=\"H\" quietZone={5}/>\n        </div>\n        <div className=\"Box\">\n          <p>Tezos price: {prices.tezos}</p>\n          <QRCode value={prices.tezos} size={100} ecLevel=\"H\" quietZone={5} logoHeight={30} logoWidth={30} logoImage={tezos}/>\n        </div>\n        <div className=\"Box\">\n          <p>Burst price: {prices.burst}</p>\n          <QRCode value={prices.burst} size={100} ecLevel=\"H\" quietZone={5} logoHeight={30} logoWidth={30} logoImage={burst}/>\n        </div>\n        <div className=\"Box\">\n          <p>Cardano price: {prices.cardano}</p>\n          <QRCode value={prices.cardano} size={100} ecLevel=\"H\" quietZone={5} logoHeight={35} logoWidth={35} logoImage={cardano}/>\n        </div>\n      </div>\n      <div>\n        <div className=\"Tweets\">\n          <div className=\"Tweet\">\n            <TwitterTimelineEmbed\n                sourceType=\"profile\"\n                screenName=\"BBCAfrica\"\n                options={{height: 350}}\n              />\n          </div>\n          <div className=\"Tweet\">\n            <TwitterTimelineEmbed\n                sourceType=\"profile\"\n                screenName=\"Ethereum\"\n                options={{height: 350}}\n              />\n          </div>\n          <button className=\"Screenshot\" onClick={takeScreenshot}>Screenshot</button>\n        </div>\n        <div className=\"Links\">\n            <a href=\"https://www.linkedin.com/in/arinramer/\" target=\"_blank\">LinkedIn</a>\n            <a href=\"https://github.com/arinramer\" target=\"_blank\">Github</a>\n            <a href=\"https://docs.google.com/document/d/1-nLgBspFNOeM-JYP5aEvzKTL_-TBPHUuhGMrN2dEK1s/edit?usp=sharing\" target=\"_blank\">Résumé</a>\n            <a href=\"mailto:arinramer@gmail.com\" target=\"_blank\">arinramer@gmail.com</a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\arinr\\Documents\\electron-helloworld\\src\\reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":106,"column":5,"nodeType":"18","endLine":106,"endColumn":13,"suggestions":"19"},{"ruleId":"20","severity":1,"message":"21","line":146,"column":62,"nodeType":"22","endLine":146,"endColumn":77},{"ruleId":"20","severity":1,"message":"21","line":147,"column":52,"nodeType":"22","endLine":147,"endColumn":67},{"ruleId":"20","severity":1,"message":"21","line":148,"column":120,"nodeType":"22","endLine":148,"endColumn":135},{"ruleId":"20","severity":1,"message":"21","line":149,"column":50,"nodeType":"22","endLine":149,"endColumn":65},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connection'. Either include it or remove the dependency array.","ArrayExpression",["23"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",{"desc":"24","fix":"25"},"Update the dependencies array to be: [connection, prices]",{"range":"26","text":"27"},[3597,3605],"[connection, prices]"]